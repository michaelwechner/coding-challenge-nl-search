# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SearchOutputResults(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, text: str=None, score: float=None, id: int=None):  # noqa: E501
        """SearchOutputResults - a model defined in Swagger

        :param text: The text of this SearchOutputResults.  # noqa: E501
        :type text: str
        :param score: The score of this SearchOutputResults.  # noqa: E501
        :type score: float
        :param id: The id of this SearchOutputResults.  # noqa: E501
        :type id: int
        """
        self.swagger_types = {
            'text': str,
            'score': float,
            'id': int
        }

        self.attribute_map = {
            'text': 'text',
            'score': 'score',
            'id': 'id'
        }
        self._text = text
        self._score = score
        self._id = id

    @classmethod
    def from_dict(cls, dikt) -> 'SearchOutputResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The search_output_results of this SearchOutputResults.  # noqa: E501
        :rtype: SearchOutputResults
        """
        return util.deserialize_model(dikt, cls)

    @property
    def text(self) -> str:
        """Gets the text of this SearchOutputResults.


        :return: The text of this SearchOutputResults.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this SearchOutputResults.


        :param text: The text of this SearchOutputResults.
        :type text: str
        """

        self._text = text

    @property
    def score(self) -> float:
        """Gets the score of this SearchOutputResults.


        :return: The score of this SearchOutputResults.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score: float):
        """Sets the score of this SearchOutputResults.


        :param score: The score of this SearchOutputResults.
        :type score: float
        """

        self._score = score

    @property
    def id(self) -> int:
        """Gets the id of this SearchOutputResults.


        :return: The id of this SearchOutputResults.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this SearchOutputResults.


        :param id: The id of this SearchOutputResults.
        :type id: int
        """

        self._id = id
